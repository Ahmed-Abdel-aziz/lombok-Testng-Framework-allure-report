<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-14T07:06:37 PDT" name="LombokAutomationFramework Suite" finished-at="2022-07-14T07:07:05 PDT" duration-ms="27172">
    <groups>
    </groups>
    <test started-at="2022-07-14T07:06:37 PDT" name="Test Login Form " finished-at="2022-07-14T07:07:05 PDT" duration-ms="27172">
      <class name="ScenarioSteps.RunLoginScenario">
        <test-method is-config="true" signature="startBrowser()[pri:0, instance:ScenarioSteps.RunLoginScenario@29629fbb]" started-at="2022-07-14T07:06:39 PDT" name="startBrowser" description="Browser is running" finished-at="2022-07-14T07:06:46 PDT" duration-ms="7264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startBrowser -->
        <test-method signature="invalidLogin(java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:ScenarioSteps.RunLoginScenario@29629fbb]" started-at="2022-07-14T07:06:46 PDT" name="invalidLogin" description="invalid case " data-provider="datareader" finished-at="2022-07-14T07:06:52 PDT" duration-ms="5956" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sad]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[asdasd]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Inva email address.]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Inva email address.] but found [Invalid email address.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Inva email address.] but found [Invalid email address.]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at io.Ahmed.Gen.Gen.assertEqual(Gen.java:103)
at ScenarioSteps.RunLoginScenario.invalidLogin(RunLoginScenario.java:30)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method is-config="true" signature="quitBrowser(org.testng.ITestResult)[pri:0, instance:ScenarioSteps.RunLoginScenario@29629fbb]" started-at="2022-07-14T07:06:52 PDT" name="quitBrowser" description="Browser is closed" finished-at="2022-07-14T07:06:53 PDT" duration-ms="404" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLogin status=FAILURE method=RunLoginScenario.invalidLogin(java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:ScenarioSteps.RunLoginScenario@29629fbb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
        <test-method is-config="true" signature="startBrowser()[pri:0, instance:ScenarioSteps.RunLoginScenario@29629fbb]" started-at="2022-07-14T07:06:53 PDT" name="startBrowser" description="Browser is running" finished-at="2022-07-14T07:06:57 PDT" duration-ms="4638" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startBrowser -->
        <test-method signature="validLogin()[pri:2, instance:ScenarioSteps.RunLoginScenario@29629fbb]" started-at="2022-07-14T07:06:57 PDT" name="validLogin" finished-at="2022-07-14T07:07:04 PDT" duration-ms="7229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLogin -->
        <test-method is-config="true" signature="quitBrowser(org.testng.ITestResult)[pri:0, instance:ScenarioSteps.RunLoginScenario@29629fbb]" started-at="2022-07-14T07:07:04 PDT" name="quitBrowser" description="Browser is closed" finished-at="2022-07-14T07:07:05 PDT" duration-ms="193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLogin status=SUCCESS method=RunLoginScenario.validLogin()[pri:2, instance:ScenarioSteps.RunLoginScenario@29629fbb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- ScenarioSteps.RunLoginScenario -->
    </test> <!-- Test Login Form  -->
  </suite> <!-- LombokAutomationFramework Suite -->
</testng-results>
